using System.Collections.Generic;

public class FiguresPresets
{
    static public List<(int, int)> GetFigureDeltas(int figureCode)
    {
        if (figureCode == (int)FigureCodes.Glider)
        {
            return new List<(int x, int y)>
            {
                (0, 0), (-1, 0), (-2, 0), (0, -1), (-1, -2)
            };
        }
        if (figureCode == (int)FigureCodes.SmallSpaceship)
        {
            return new List<(int x, int y)>
            {
                (0, 0), (0, 1), (0, 2), (-1, 0), (-1, 3), (-2, 0), (-3, 0), (-4, 1), (-4, 3)
            };
        }
        if (figureCode == (int)FigureCodes.MediumSpaceship)
        {
            return new List<(int x, int y)>
            {
                (0, 0), (-1, 0), (-2, 0), (-3, 0), (-4, 0), (0, 1), (-5, 1), (0, 2), (-1, 3), (-5, 3), (-3, 4)
            };
        }
        if (figureCode == (int)FigureCodes.LargeSpaceship)
        {
            return new List<(int x, int y)>
            {
                (0, 0), (-1, 0), (-2, 0), (-3, 0), (-4, 0), (-5, 0), (0, 1), (-6, 1), (0, 2), (-1, 3), (-6, 3), (-3, 4), (-4, 4)
            };
        }
        if (figureCode == (int)FigureCodes.GosperGun)
        {
            return new List<(int x, int y)>
            {
                (0, 0), (-1, 0), (-1, 1), (-2, 2), (-4, 3), (-5, 3), (-1, -1), (-2, -2), (-3, 0), (-4, -3), (-5, -3), (-6, -2),
                (-7, -1), (-7, 0), (-7, 1), (-6, 2), (-16, 0), (-17, 0), (-16, 1), (-17, 1), (3, 1), (3, 2), (3, 3), (4, 1),
                (4, 2), (4, 3), (5, 4), (5, 0), (7, 0), (7, -1), (7, 4), (7, 5), (17, 2), (17, 3), (18, 2), (18, 3)
            };
        }
        if (figureCode == (int)FigureCodes.SpaceFiller)
        {
            return new List<(int x, int y)>
            {
                (0, 0), (-1, 0), (-2, 0), (-3, 0), (-4, 0), (-5, 0), (-6, 0), (-7, 0), (-8, 0), (-9, 0), (-9, 1), (-10, 1),
                (-10, 2), (-11, 2), (-10, 3), (-9, 3), (-13, 3), (-12, 4), (-12, 5), (-12, 6), (-13, 7), (-15, 8), (-16, 7),
                (-17, 7), (-18, 6), (-18, 5), (-18, 4), (-17, 3), (-16, 3), (-15, 2), (-20, 1), (-21, 0), (-22, 0), (-23, 0),
                (-24, 0), (-24, 1), (-24, 2), (-23, 3), (-20, 3), (-20, 7), (-20, 9), (-21, 10), (-22, 10), (-23, 10), (-24, 10),
                (-24, 9), (-24, 8), (-23, 7), (0, 2), (-1, 2), (-2, 2), (-3, 2), (-4, 2), (-5, 2), (-4, 3), (-3, 4), (-3, 5),
                (-3, 6), (-4, 6), (-2, 6), (-2, 4), (-1, 4), (0, 4), (-2, 8), (-2, 9), (-2, 10), (-2, 11), (-2, 12), (-3, 12),
                (-4, 12), (-5, 11), (0, -2), (-1, -2), (-2, -2), (-3, -2), (-4, -2), (-5, -2), (-6, -1), (-8, -1), (-5, -3),
                (-4, -4), (-3, -4), (-2, -4), (-1, -4), (0, -4), (0, -5), (-2, -6), (-3, -6), (-4, -6), (-2, -7), (-1, -9),
                (-2, -9), (-3, -9), (-1, -10), (-2, -10), (-3, -10), (-1, -11), (-2, -11), (-4, -11), (-2, -12), (-3, -12),
                (-4, -12), (-3, -13), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (9, 1), (10, 1),
                (10, 2), (11, 2), (10, 3), (9, 3), (13, 3), (12, 4), (12, 5), (12, 6), (13, 7), (15, 8), (16, 7), (17, 7),
                (18, 6), (18, 5), (18, 4), (17, 3), (16, 3), (15, 2), (20, 1), (21, 0), (22, 0), (23, 0), (24, 0), (24, 1),
                (24, 2), (23, 3), (20, 3), (20, 7), (20, 9), (21, 10), (22, 10), (23, 10), (24, 10), (24, 9), (24, 8),
                (23, 7), (1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (4, 3), (3, 4), (3, 5), (3, 6), (4, 6), (2, 6), (2, 4),
                (1, 4), (2, 8), (2, 9), (2, 10), (2, 11), (2, 12), (3, 12), (4, 12), (5, 11), (1, -2), (2, -2), (3, -2),
                (4, -2), (5, -2), (6, -1), (8, -1), (5, -3), (4, -4), (3, -4), (2, -4), (1, -4), (2, -6), (3, -6), (4, -6),
                (2, -7), (1, -9), (2, -9), (3, -9), (1, -10), (2, -10), (3, -10), (1, -11), (2, -11), (4, -11), (2, -12),
                (3, -12), (4, -12), (3, -13)
            };
        }

        return new List<(int x, int y)>{};
    }
}